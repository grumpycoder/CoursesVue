@model string

@{
    ViewBag.Title = "Clusters";
}
<style>
    [v-cloak] {
        display: none;
    }
</style>

@Html.Partial("_CareerTechNav")

<div id="app" v-cloak>

    <div class="row">
        <div class="col-6">
            <fieldset>
                <legend>Clusters</legend>
                <div class="row">
                    <div class="col-12">
                        <p>

                            <div class="form-group row">
                                <label for="cluster" class="col-md-2 col-form-label">Clusters</label>
                                <div class="col-md-8">
                                    <select class="form-control"
                                            v-model="selectedCluster"
                                            v-on:change="onChange($event)"
                                            name="cluster"
                                            id="cluster">
                                        <option :value="null">-- Select Cluster --</option>
                                        <option v-for="item in clusters" :value="item"
                                                :selected="item.clusterCode == clusterCode">
                                            {{ item.name }} ({{ item.clusterCode }})
                                        </option>
                                    </select>

                                    @*<select class="form-control" v-model="selectedCluster" v-on:change="onChange($event)">
                                            <option v-for="(cluster,index) in clusters" :value="index">{{ cluster.name }}</option>
                                        </select>*@


                                </div>


                            </div>

                            <div v-if="!selectedCluster">
                                <h4>Select a cluster to edit</h4>
                            </div>

                            <form novalidate v-on:submit.prevent="submit()" v-if="cluster">

                                <div class="form-group row">
                                    <label for="clusterCode" class="col-md-2 col-form-label">Cluster Code</label>
                                    <div class="col-md-8">
                                        <input type="text"
                                               class="form-control"
                                               id="clusterCode"
                                               name="clusterCode"
                                               placeholder="Cluster Code (required)"
                                               v-model="cluster.clusterCode"
                                               minlength="3" />
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="clusterName" class="col-md-2 col-form-label">Name</label>
                                    <div class="col-md-8">
                                        <input type="text"
                                               class="form-control"
                                               id="clusterName"
                                               name="clusterName"
                                               placeholder="Cluster Name (required)"
                                               v-model="cluster.name"
                                               minlength="3" />
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="clusterTypeId" class="col-md-2 col-form-label">Cluster Type</label>
                                    <div class="col-md-8">
                                        <select class="form-control"
                                                v-model="cluster.clusterTypeId"
                                                name="clusterTypeId"
                                                id="clusterTypeId">
                                            <option :value="null">-- Select Cluster Type --</option>
                                            <option v-for="type in clusterTypes" :value="type.id">{{ type.name }}</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="beginYear" class="col-md-2 col-form-label">Begin Year</label>
                                    <div class="col-md-8">
                                        <select class="form-control"
                                                v-model="cluster.beginYear"
                                                name="beginYear"
                                                id="beginYear">
                                            <option :value="null">-- Select Year --</option>
                                            <option v-for="year in schoolYears" :value="year.year">{{ year.year }}</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="endYear" class="col-md-2 col-form-label">End Year</label>
                                    <div class="col-md-8">
                                        <select class="form-control"
                                                v-model="cluster.endYear"
                                                name="endYear"
                                                id="endYear">
                                            <option :value="null">-- Select Year --</option>
                                            <option v-for="year in schoolYears" :value="year.year">{{ year.year }}</option>
                                        </select>
                                    </div>
                                </div>

                                <button class="btn btn-primary" type="submit">Save Cluster</button>
                            </form>

                        </p>
                    </div>
                </div>
            </fieldset>

        </div>

        <div class="col-6">
            <fieldset v-if="cluster">
                <legend>
                    Assigned Programs
                </legend>
                <div class="row">
                    <div class="col-12">
                        <p>

                            <div v-if="programs.length === 0">
                                No programs assigned
                            </div>


                            <ul class="list-group" v-if="programs.length > 0">
                                <li class="list-group-item" v-for="program in programs">
                                    <div class="text-muted">Cluster: {{ program.clusterName}}</div>
                                    <div class="font-weight-bolder">
                                        <span>

                                            <a v-bind:href="'/careertech/programs/'+ program.programCode">
                                                {{ program.programName }} ({{ program.programCode }})
                                            </a>
                                        </span>
                                    </div>
                                </li>
                            </ul>
                        </p>
                    </div>
                </div>
            </fieldset>
        </div>

    </div>

</div>


@section scripts{
    <script>
        var careerTechUrl = '/api/careertech/';
        var courseUrl = '/api/courses/';
        var refUrl = '/api/ref/';
        var urlParam = '@Model' ? '@Model' : null;

        var app = new Vue({
            el: '#app',
            data: {
                clusterCode: null,
                selectedCluster: null,
                cluster: null,
                clusters: [],
                schoolYears: [],
                clusterTypes: [],
                programs: [],
            },
            methods: {
                submit: function(e) {
                    axios.put(careerTechUrl + 'clusters', this.cluster)
                        .then(resp => {
                            this.selectedCluster.name = this.cluster.name;
                            this.selectedCluster.clusterCode = this.cluster.clusterCode;
                        });
                },

                onChange: function(e) {
                    this.getCluster(this.selectedCluster.clusterCode);
                },

                getCluster(clusterCode) {
                    var url = careerTechUrl + 'clusters/' + clusterCode;

                    axios.get(url + '/edit').then(resp => {
                            this.cluster = resp.data;
                        }).then(resp => {
                            axios.get(url + '/programs').then(resp => {
                                this.programs = resp.data;
                            }).catch(err => console.log(err));
                        })
                        .catch(err => console.log(err));
                }
            },
            created() {
                axios.get(refUrl + 'schoolyears').then(resp => {
                    this.schoolYears = resp.data;
                }).catch(err => console.log(err));

                axios.get(refUrl + 'clustertypes').then(resp => {
                    this.clusterTypes = resp.data;
                }).catch(err => console.log(err));

                axios.get(refUrl + 'clusters').then(resp => {
                    this.clusters = resp.data;
                }).then(() => {
                    if (urlParam !== null) {
                        this.selectedCluster = this.clusters.find(x => x.clusterCode === urlParam);
                        this.getCluster(urlParam);
                    }
                }).catch(err => console.log(err));

            },
            updated() {
            },
            beforeMount() {
            },
            mounted() {
            }
        });
    </script>
}

