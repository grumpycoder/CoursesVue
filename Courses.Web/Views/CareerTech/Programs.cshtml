@{
    ViewBag.Title = "Programs";
}

<style>
    [v-cloak] {
        display: none;
    }
</style>


<div id="app" v-cloak>

    <div class="row">
        <div class="col-6">
            <fieldset>
                <legend>Programs</legend>
                <div class="form-group row">
                    <label for="programId" class="col-md-2 col-form-label">Programs</label>
                    <div class="col-md-8">
                        <select class="form-control"
                                v-model="selectedProgramCode"
                                v-on:change="onChange($event)"
                                name="programId" id="programId">
                            <option :value="null">-- Select Program --</option>
                            <option v-for="p in programs" :value="p.programCode">
                                {{ p.programName }} ({{ p.programCode }})
                            </option>
                        </select>
                    </div>


                </div>

                <div v-if="!selectedProgramCode">
                    <h4>Select a Program to edit</h4>
                </div>

                <form novalidate v-on:submit.prevent="submit()" v-if="selectedProgramCode">

                    <div class="form-group row">
                        <label for="programCode" class="col-md-2 col-form-label">Program Code</label>
                        <div class="col-md-8">
                            <input type="text"
                                   class="form-control"
                                   id="programCode"
                                   name="programCode"
                                   placeholder="Program Code (required)"
                                   v-model="program.programCode"
                                   minlength="3" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="programName" class="col-md-2 col-form-label">Name</label>
                        <div class="col-md-8">
                            <input type="text"
                                   class="form-control"
                                   id="programName"
                                   name="programName"
                                   placeholder="Program Name (required)"
                                   v-model="program.name"
                                   minlength="3" />
                        </div>
                    </div>


                    <div class="form-group row">
                        <label for="clusterId" class="col-md-2 col-form-label">Cluster</label>
                        <div class="col-md-8">
                            <select class="form-control" v-model="program.clusterId"
                                    name="clusterId"
                                    id="clusterId">
                                <option :value="null">-- Select Cluster --</option>
                                <option v-for="cluster in clusters" :value="cluster.id">
                                    {{ cluster.name }}
                                </option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="programTypeId" class="col-md-2 col-form-label">Program Type</label>
                        <div class="col-md-8">
                            <select class="form-control" v-model="program.programTypeId" name="programTypeId" id="programTypeId">
                                <option :value="null">-- Select Program Type --</option>
                                <option v-for="type in programTypes" :value="type.id">
                                    {{ type.name }}
                                </option>
                            </select>
                        </div>
                    </div>



                    <div class="form-group row">
                        <label for="beginYear" class="col-md-2 col-form-label">Begin Year</label>
                        <div class="col-md-8">
                            <select class="form-control"
                                    v-model="program.beginYear"
                                    name="beginYear"
                                    id="beginYear">
                                <option :value="null">-- Select Year --</option>
                                <option v-for="year in schoolYears" :value="year.year">{{ year.year }}</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="endYear" class="col-md-2 col-form-label">End Year</label>
                        <div class="col-md-8">
                            <select class="form-control"
                                    v-model="program.endYear"
                                    name="endYear"
                                    id="endYear">
                                <option :value="null">-- Select Year --</option>
                                <option v-for="year in schoolYears" :value="year.year">{{ year.year }}</option>
                            </select>
                        </div>
                    </div>

                    <button class="btn btn-primary" type="submit">Save Program</button>
                </form>


            </fieldset>

        </div>


        <div class="col-6">
            <fieldset v-if="selectedProgramCode">
                <legend>
                    Assigned Credentials
                </legend>
                <div class="row">
                    <div class="col-12">
                        <p>


                            <ul class="list-group">
                                <li class="list-group-item" v-for="credential in program.credentials">

                                    <span>
                                        {{ credential.name }} ({{ credential.credentialCode }})
                                    </span>

                                </li>
                            </ul>
                        </p>
                    </div>
                </div>
            </fieldset>
        </div>

    </div>

</div>


@section scripts{
    <script>

        var app = new Vue({
            el: '#app',
            data: {
                selectedProgramCode: null,
                program: {},
                errors: [],
                clusters: [],
                programs: [],
                schoolYears: [],
                programTypes: []
            },
            methods: {
                submit: function (e) {
                    console.log('save', this.program);
                    axios.put('/api/careertech/programs', this.program)
                        .then(resp => {
                            console.log(resp);
                        });
                },

                onChange: function (e) {

                    var url = '/api/careertech/programs/' + this.selectedProgramCode + '/edit/full';
                    console.log(url);
                    axios.get(url).then(resp => {
                        this.program = resp.data;
                        console.log(this.program);
                    }).catch(err => console.log(err));
                }

                //deleteProgram: function (e, program) {
                //    //var idx = this.program.programs.indexOf(program);

                //    //axios.delete('/api/careertech/clusters/' + this.selectedCluster + '/' + program.programCode)
                //    //    .then(resp => {
                //    //        this.program.programs.splice(idx, 1);
                //    //    });
                //},

                //addProgram: function (e) {
                //    var url = '/api/careertech/programs/' + this.selectedCluster + '/' + this.program.id;

                //    axios.post(url)
                //        .then(resp => {
                //            var dto = resp.data.result;
                //            this.program.programs.push(dto);
                //        });
                //}

            },
            mounted() {

                axios.get('/api/ref/schoolyears').then(resp => {
                    this.schoolYears = resp.data;
                }).catch(err => console.log(err));

                axios.get('/api/ref/clusters').then(resp => {
                    this.clusters = resp.data;
                }).catch(err => console.log(err));

                axios.get('/api/ref/programs').then(resp => {
                    this.programs = resp.data;
                }).catch(err => console.log(err));

                axios.get('/api/ref/programTypes').then(resp => {
                    this.programTypes = resp.data;
                }).catch(err => console.log(err));

            }
        })
    </script>
}



