@{
    ViewBag.Title = "Programs";
}

<style>
    [v-cloak] {
        display: none;
    }
</style>

<div id="app" v-cloak>

    <div class="row">
        <div class="col-6">
            <fieldset>
                <legend>Programs</legend>
                <div class="form-group row">
                    <label for="programId" class="col-md-2 col-form-label">Programs</label>
                    <div class="col-md-8">
                        <select class="form-control"
                                v-model="selectedProgramCode"
                                v-on:change="onChange($event)"
                                name="programId" id="programId">
                            <option :value="null">-- Select Program --</option>
                            <option v-for="p in programs" :value="p.programCode">
                                {{ p.programName }} ({{ p.programCode }})
                            </option>
                        </select>
                    </div>


                </div>

                <div v-if="!selectedProgramCode">
                    <h4>Select a Program to edit</h4>
                </div>

                <form novalidate v-on:submit.prevent="submit()" v-if="selectedProgramCode">

                    <div class="form-group row">
                        <label for="programCode" class="col-md-2 col-form-label">Program Code</label>
                        <div class="col-md-8">
                            <input type="text"
                                   class="form-control"
                                   id="programCode"
                                   name="programCode"
                                   placeholder="Program Code (required)"
                                   v-model="program.programCode"
                                   minlength="3" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="programName" class="col-md-2 col-form-label">Name</label>
                        <div class="col-md-8">
                            <input type="text"
                                   class="form-control"
                                   id="programName"
                                   name="programName"
                                   placeholder="Program Name (required)"
                                   v-model="program.name"
                                   minlength="3" />
                        </div>
                    </div>


                    <div class="form-group row">
                        <label for="clusterId" class="col-md-2 col-form-label">Cluster</label>
                        <div class="col-md-8">
                            <select class="form-control" v-model="program.clusterId"
                                    name="clusterId"
                                    id="clusterId">
                                <option :value="null">-- Select Cluster --</option>
                                <option v-for="cluster in clusters" :value="cluster.id">
                                    {{ cluster.name }}
                                </option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="programTypeId" class="col-md-2 col-form-label">Program Type</label>
                        <div class="col-md-8">
                            <select class="form-control" v-model="program.programTypeId" name="programTypeId" id="programTypeId">
                                <option :value="null">-- Select Program Type --</option>
                                <option v-for="type in programTypes" :value="type.id">
                                    {{ type.name }}
                                </option>
                            </select>
                        </div>
                    </div>



                    <div class="form-group row">
                        <label for="beginYear" class="col-md-2 col-form-label">Begin Year</label>
                        <div class="col-md-8">
                            <select class="form-control"
                                    v-model="program.beginYear"
                                    name="beginYear"
                                    id="beginYear">
                                <option :value="null">-- Select Year --</option>
                                <option v-for="year in schoolYears" :value="year.year">{{ year.year }}</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="endYear" class="col-md-2 col-form-label">End Year</label>
                        <div class="col-md-8">
                            <select class="form-control"
                                    v-model="program.endYear"
                                    name="endYear"
                                    id="endYear">
                                <option :value="null">-- Select Year --</option>
                                <option v-for="year in schoolYears" :value="year.year">{{ year.year }}</option>
                            </select>
                        </div>
                    </div>

                    <button class="btn btn-primary" type="submit">Save Program</button>
                </form>


            </fieldset>

        </div>


        <div class="col-6">
            <fieldset v-if="selectedProgramCode">
                <legend>
                    Assigned Credentials
                </legend>
                <div class="row">
                    <div class="col-12">
                        <p>
                            <div class="input-group mb-3">
                                <select class="form-control"
                                        v-model="selectedCredentialCode"
                                        name="selectedCredentialCode"
                                        id="selectedCredentialCode">
                                    <option :value="null">-- Select Credential --</option>
                                    <option v-for="item in credentials" :value="item.credentialCode">{{ item.name }} ({{ item.credentialCode }})</option>
                                </select>
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" id="button-addon2" v-on:click="addCredential">Add Credential</button>
                                </div>
                            </div>

                            <ul class="list-group">
                                <li class="list-group-item" v-for="credential in program.credentials">
                                    <div class="row">
                                        <div class="col-9">
                                            {{ credential.name }} ({{ credential.credentialCode }})
                                        </div>
                                        <div class="col-3">
                                            <button class="btn btn-danger btn-sm float-right" v-on:click="deleteCredential(credential)">Delete</button>

                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </p>
                    </div>
                </div>
            </fieldset>
        </div>



        <div class="col-6">
            <fieldset v-if="selectedProgramCode">
                <legend>
                    Assigned Courses
                </legend>
                <div class="row">
                    <div class="col-12">
                        <p>
                            <div class="input-group mb-3">
                                <select class="form-control"
                                        v-model="selectedCourseCode"
                                        name="selectedCourseCode"
                                        id="selectedCourseCode">
                                    <option :value="null">-- Select Course --</option>
                                    <option v-for="item in courses" :value="item.courseCode">{{ item.courseCode }} ({{ item.name }})</option>
                                </select>
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" id="button-addon2" v-on:click="addCourse">Add Course</button>
                                </div>
                            </div>

                            <ul class="list-group">
                                <li class="list-group-item" v-for="course in programCourses">
                                    <div class="row">
                                        <div class="col-9">
                                            {{ course.name }} ({{ course.courseCode }})
                                        </div>
                                        <div class="col-3">
                                            <button class="btn btn-danger btn-sm float-right" v-on:click="removeCourse(course)">Delete</button>

                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </p>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>

</div>


@section scripts{
    <script>

        var app = new Vue({
            el: '#app',
            data: {
                selectedProgramCode: null,
                selectedCredentialCode: null,
                selectedCourseCode: null,
                program: {},
                programCourses: [],
                errors: [],
                clusters: [],
                programs: [],
                schoolYears: [],
                programTypes: [],
                credentials: [],
                courses: []
            },
            methods: {
                submit: function (e) {
                    axios.put('/api/careertech/programs', this.program)
                        .then(resp => {
                        });
                },

                onChange: function (e) {
                    var url = '/api/careertech/programs/' + this.selectedProgramCode + '/edit/full';
                    axios.get(url).then(resp => {
                        this.program = resp.data;
                    }).then(resp => {
                        //programs/{programCode}/courses
                        var courseUrl = '/api/careertech/programs/' + this.selectedProgramCode + '/courses';
                        axios.get(courseUrl).then(resp => {
                            this.programCourses = resp.data;
                        }).catch(err => console.log(err));
                    })
                        .catch(err => console.log(err));
                },

                deleteCredential: function (credential) {
                    var idx = this.program.credentials.indexOf(credential);
                    var url = '/api/careertech/programs/' + this.selectedProgramCode + '/credential/' + credential.credentialCode;
                    this.program.credentials.splice(idx, 1);
                    axios.delete(url)
                        .then(resp => {
                            this.program.credentials.splice(idx, 1);
                        });
                },

                addCredential: function () {
                    var url = '/api/careertech/programs/' + this.selectedProgramCode + '/credential/' + this.selectedCredentialCode;
                    axios.post(url)
                        .then(resp => {
                            var dto = resp.data;
                            this.courses.credentials.push(dto);
                        });
                },

                addCourse: function() {
                    var url = '/api/careertech/programs/' + this.selectedProgramCode + '/course/' + this.selectedCourseCode;
                    axios.post(url)
                        .then(resp => {
                            var dto = resp.data;
                            this.programCourses.push(dto);
                        }).catch(err => console.log(err));;
                },

                removeCourse: function(course) {
                    console.log('course', course);
                    var idx = this.programCourses.indexOf(course);
                    var url = '/api/careertech/programs/' + this.selectedProgramCode + '/course/' + course.courseCode;
                    axios.delete(url)
                        .then(resp => {
                            console.log(resp);
                            var dto = resp.data;
                            this.programCourses.splice(idx, 1);
                        }).catch(err => console.log(err));;
                }

            },
            mounted() {

                axios.get('/api/ref/schoolyears').then(resp => {
                    this.schoolYears = resp.data;
                }).catch(err => console.log(err));

                axios.get('/api/ref/clusters').then(resp => {
                    this.clusters = resp.data;
                }).catch(err => console.log(err));

                axios.get('/api/ref/programs').then(resp => {
                    this.programs = resp.data;
                }).catch(err => console.log(err));

                axios.get('/api/ref/programTypes').then(resp => {
                    this.programTypes = resp.data;
                }).catch(err => console.log(err));

                axios.get('/api/ref/credentials').then(resp => {
                    this.credentials = resp.data;
                }).catch(err => console.log(err));

                axios.get('/api/courses?loadOptions.filter=isActive%3Dtrue&loadOptions.remoteSelect=true').then(resp => {
                    this.courses = resp.data.data;
                }).catch(err => console.log(err));
            }
        })
    </script>
}



