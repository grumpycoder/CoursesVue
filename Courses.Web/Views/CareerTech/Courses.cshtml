
@{
    ViewBag.Title = "Courses";
}

<style>
    [v-cloak] {
        display: none;
    }
</style>


<div id="app" v-cloak>

    <div class="row">
        <div class="col-6">
            <fieldset>
                <legend>Courses</legend>
                <div class="form-group row">
                    <label for="selectedCourseCode" class="col-md-2 col-form-label">Courses</label>
                    <div class="col-md-8">
                        <select class="form-control"
                                v-model="selectedCourse"
                                name="selectedCourseCode"
                                id="selectedCourseCode"
                                v-on:change="onChange($event)">
                            <option :value="null">-- Select Course --</option>
                            <option v-for="item in courses" :value="item">{{ item.courseCode }} ({{ item.name }})</option>
                        </select>
                    </div>


                </div>

                <div v-if="!selectedCourse">
                    <h4>Select a credential to edit</h4>
                </div>


            </fieldset>

        </div>
    </div>
    <div class="row">

        <div class="col-6">
            <fieldset v-if="selectedCourse">
                <legend>
                    Assigned Programs
                </legend>
                <div class="row">
                    <div class="col-12">
                        <p>
                            <div class="input-group mb-3">
                                <select class="form-control"
                                        v-model="selectedProgram"
                                        name="selectedProgram"
                                        id="selectedProgram">
                                    <option :value="null">-- Select Program --</option>
                                    <option v-for="item in programs" :value="item">{{ item.programName }} ({{ item.programCode }})</option>
                                </select>
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" id="button-addon2" v-on:click="addProgram">Add Program</button>
                                </div>
                            </div>

                            <ul class="list-group">
                                <li class="list-group-item" v-for="item in coursePrograms">
                                    <div class="row">
                                        <div class="col-9">
                                            {{ item.programName }} ({{ item.programCode }})
                                        </div>
                                        <div class="col-3">
                                            <button class="btn btn-danger btn-sm float-right" v-on:click="removeProgram(item)">Delete</button>

                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </p>
                    </div>
                </div>
            </fieldset>
        </div>


    </div>

</div>


@section scripts{
    <script type="text/javascript">

        var app = new Vue({
            el: '#app',
            data: {
                selectedCourse: null,
                selectedProgram: null,
                courses: [],
                coursePrograms: [],
                programs: []
            },
            methods: {

                onChange: function (e) {
                    var url = '/api/careertech/courses/' + this.selectedCourse.courseCode + '/programs';
                    axios.get(url).then(resp => {
                        this.coursePrograms = resp.data;
                    }).catch(err => console.log(err));

                },
                removeProgram: function (program) {
                    var url = '/api/careertech/programs/' + program.programCode + '/course/' + this.selectedCourse.courseCode;
                    var idx = this.coursePrograms.indexOf(program);
                    axios.delete(url)
                        .then(resp => {
                            this.coursePrograms.splice(idx, 1);

                        });
                },

                addProgram: function () {
                    var url = '/api/careertech/programs/' + this.selectedProgram.programCode + '/course/' + this.selectedCourse.courseCode;
                    axios.post(url)
                        .then(resp => {
                            this.coursePrograms.push(this.selectedProgram);
                        });
                },
            },
            mounted() {
                var url = '/api/ref/';

                axios.get('/api/courses?loadOptions.filter=isActive%3Dtrue&loadOptions.remoteSelect=true').then(resp => {
                    this.courses = resp.data.data;
                }).catch(err => console.log(err));

                axios.get('/api/ref/programs').then(resp => {
                    this.programs = resp.data;
                }).catch(err => console.log(err));

            }
        })
    </script>
}
