@model string

@{
    ViewBag.Title = "Edit";
}
<style>
    [v-cloak] {
        display: none;
    }

    section.tab-container {
        padding: 1em 0.8em;
    }
</style>

<div id="app" v-cloak>

    <div class="card" v-if="!course">
        <div class="card-header">
            <span class="card-title font-weight-bolder">Not Found</span>
        </div>
        <div class="card-body">
            <h4>Unable to find course {{this.urlParam}}</h4>
        </div>
        <div class="card-footer text-muted">
            <a href="/courses">Back To Courses</a>
        </div>
    </div>

    <div class="card" v-if="course">
        <div class="card-header">
            <span class="card-title font-weight-bolder">{{title}}</span>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-6">
                    <fieldset class="border p-2">
                    <legend class="w-auto">
                        <small>Details</small>
                        </legend>

                        <form novalidate v-on:submit.prevent="submit()">

                            @*<ul>
                                    <li v-for="group in errors.collect()">
                                        <ul>
                                            <li v-for="error in group">{{ error }}</li>
                                        </ul>
                                    </li>
                                </ul>*@

                            <div class="form-group row">
                                <label for="courseCode" class="col-3 col-form-label">Course Code</label>
                                <div class="col-9">
                                    <input type="text"
                                           class="form-control"
                                           id="courseCode"
                                           name="courseCode"
                                           placeholder="Course Code (required)"
                                           v-model.trim="course.courseCode"
                                           v-validate.continues="'required|min:6|max:6'" 
                                           data-vv-as="Course Code" />
                                    <small v-if="errors.has('courseCode')" class="text-danger">{{ errors.first('courseCode') }}</small>
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="cipCode" class="col-3 col-form-label">CIP Code</label>
                                <div class="col-9">
                                    <input autocomplete="off"
                                           type="text"
                                           class="form-control"
                                           id="cipCode"
                                           name="cipCode"
                                           placeholder="CIP Code"
                                           v-model.trim="course.cipCode"
                                           v-validate="'min:3|max:3'"
                                           data-vv-as="CIP Code"/>
                                    <small v-if="errors.has('cipCode')" class="text-danger">{{ errors.first('cipCode') }}</small>
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="courseName" class="col-3 col-form-label">Name</label>
                                <div class="col-9">
                                    <input type="text"
                                           class="form-control"
                                           id="courseName"
                                           name="courseName"
                                           placeholder="Course Name (required)"
                                           v-model.trim="course.name"
                                           v-validate="'required'"
                                           data-vv-as="Course Name"/>
                                    <small v-if="errors.has('courseName')" class="text-danger">{{ errors.first('courseName') }}</small>
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="description" class="col-3 col-form-label">Description</label>
                                <div class="col-9">
                                    <textarea id="description"
                                              name="description"
                                              class="form-control"
                                              cols="30"
                                              rows="10"
                                              placeholder="Course Description (required)"
                                              v-model.trim="course.description"
                                              v-validate="'required'"
                                              data-vv-as="Description"></textarea>
                                    <small v-if="errors.has('description')" class="text-danger">{{ errors.first('description') }}</small>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-6">
                                    <label for="beginServiceYearId" class="col-form-label">Beginning Service Year</label>
                                    <select class="form-control"
                                            v-model="course.beginServiceYearId"
                                            name="beginServiceYearId"
                                            id="beginServiceYearId"
                                            v-validate="'required'"
                                            data-vv-as="Beginning Service Year"
                                            ref="beginServiceYear">
                                        <option :value="null">-- Select Year --</option>
                                        <option v-for="year in schoolYears" :value="year.id">{{ year.year }}</option>
                                    </select>
                                    <small v-if="errors.has('beginServiceYearId')" class="text-danger">{{ errors.first('beginServiceYearId') }}</small>
                                </div>
                                <div class="col-6">
                                    <label for="endServiceYearId" class="col-form-label">Ending Service Year</label>
                                    <select class="form-control"
                                            v-model="course.endServiceYearId"
                                            name="endServiceYearId"
                                            id="endServiceYearId"
                                            v-validate.continues="'greaterThan:beginServiceYear'"
                                            data-vv-as="End Service Year">
                                        <option :value="null">-- Select Year --</option>
                                        <option v-for="year in schoolYears" :value="year.id">{{ year.year }}</option>
                                    </select>
                                    <small v-if="errors.has('endServiceYearId')" class="text-danger">{{ errors.first('endServiceYearId') }}</small>
                                </div>

                            </div>

                            <div class="form-group row">
                                <div class="col-6">
                                    <label for="lowGradeId" class="col-form-label">Lowest Grade</label>
                                    <select class="form-control"
                                            v-model="course.lowGradeId"
                                            name="lowGradeId"
                                            id="lowGradeId"
                                            v-validate="'required'"
                                            data-vv-as="Lowest Grade">
                                        <option :value="null">-- Select Grade --</option>
                                        <option v-for="grade in grades" :value="grade.id">
                                            {{ grade.name }} - {{ grade.description }}
                                        </option>
                                    </select>
                                    <small v-if="errors.has('lowGradeId')" class="text-danger">{{ errors.first('lowGradeId') }}</small>
                                </div>
                                <div class="col-6">
                                    <label for="highGradeId" class="col-form-label">Highest Grade</label>
                                    <select class="form-control"
                                            v-model="course.highGradeId"
                                            name="highGradeId"
                                            id="highGradeId"
                                            v-validate="'required'"
                                            data-vv-as="Highest Grade">
                                        <option :value="null">-- Select Grade --</option>
                                        <option v-for="grade in grades" :value="grade.id">
                                            {{ grade.name }} - {{ grade.description }}
                                        </option>
                                    </select>
                                    <small v-if="errors.has('highGradeId')" class="text-danger">{{ errors.first('highGradeId') }}</small>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-6">
                                    <label for="courseTypeId" class="col-form-label">Course Type</label>
                                    <select class="form-control"
                                            v-model="course.courseTypeId"
                                            name="courseTypeId"
                                            id="courseTypeId"
                                            v-validate="'required'"
                                            data-vv-as="Course Type">
                                        <option :value="null">-- Select Course Type --</option>
                                        <option v-for="type of courseTypes" :value="type.id">{{ type.name }}</option>
                                    </select>
                                    <small v-if="errors.has('courseTypeId')" class="text-danger">{{ errors.first('courseTypeId') }}</small>
                                </div>

                                <div class="col-6">
                                    <label for="creditTypeId" class="col-form-label">Credit Type</label>
                                    <select class="form-control"
                                            v-model="course.creditTypeId"
                                            name="creditTypeId"
                                            id="creditTypeId"
                                            v-validate="'required'"
                                            data-vv-as="Credit Type">
                                        <option :value="null">-- Select Credit Type --</option>
                                        <option v-for="type of creditTypes" :value="type.id">{{ type.name }}</option>
                                    </select>
                                    <small v-if="errors.has('creditTypeId')" class="text-danger">{{ errors.first('creditTypeId') }}</small>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-6">
                                    <label for="classTypeId" class="col-form-label">Class Type</label>
                                    <select class="form-control"
                                            v-model="course.classTypeId"
                                            name="classTypeId"
                                            id="classTypeId"
                                            v-validate="'required'"
                                            data-vv-as="Class Type">
                                        <option :value="null">-- Select Class Type --</option>
                                        <option v-for="type of classTypes" :value="type.id">{{ type.name }} - {{ type.description }}</option>
                                    </select>
                                    <small v-if="errors.has('classTypeId')" class="text-danger">{{ errors.first('classTypeId') }}</small>
                                </div>

                                <div class="col-6">
                                    <label for="subjectAreaId" class="col-form-label">Subject Area</label>
                                    <select class="form-control"
                                            v-model="course.subjectAreaId"
                                            name="subjectAreaId"
                                            id="subjectAreaId"
                                            v-validate="'required'"
                                            data-vv-as="Subject Area">
                                        <option :value="null">-- Select Subject Area --</option>
                                        <option v-for="type of subjectAreas" :value="type.id">{{ type.name }}</option>
                                    </select>
                                    <small v-if="errors.has('subjectAreaId')" class="text-danger">{{ errors.first('subjectAreaId') }}</small>
                                </div>
                            </div>

                            <button class="btn btn-primary" :disabled="errors.any() || !isFormDirty" type="submit">Save Course</button>
                        </form>
                    </fieldset>
                </div>

                <div class="col-6">
                    <fieldset class="border p-2">
                        <legend class="w-auto">
                            <small>Current Programs</small>
                        </legend>

                        <div class="row">
                            <div class="col-12">

                                <div class="input-group">
                                    <select class="form-control"
                                            v-model="selectedProgram"
                                            name="programs">
                                        <option value="null">Choose Program ...</option>
                                        <option v-for="program in programs" :value="program">
                                            {{ program.clusterName }} - {{ program.programName }}
                                        </option>
                                    </select>

                                    <div class="input-group-append" id="button-addon4">
                                        <button class="btn btn-outline-secondary" type="button" v-on:click="addProgram">Add Program</button>
                                    </div>
                                </div>
                            </div>
                        </div>



                        <div class="row">
                            <div class="col-12">
                                <p>


                                    <ul class="list-group">
                                        <li class="list-group-item" v-for="program in coursePrograms">
                                            <div class="text-muted">Cluster: {{ program.clusterName}}</div>
                                            <div class="font-weight-bolder">
                                                {{ program.programName }} ({{ program.programCode }})
                                                <span class="float-right"><button class="btn btn-danger" v-on:click="deleteProgram($event, program)">Delete</button></span>
                                            </div>
                                        </li>
                                    </ul>
                                </p>
                            </div>
                        </div>
                    </fieldset>
                </div>

            </div>

        </div>

        <div class="card-footer text-muted">
            <a v-bind:href="'/courses/'+ course.courseCode + ''"><i class="fa fa-arrow-circle-o-left"></i> Back To Details</a>
            <a href="/courses" class="float-right"><i class="fa fa-book"></i> Back To Courses</a>
        </div>
    </div>


</div>

@section scripts{

    <script>
        var urlParam = '@Model' ? '@Model' : null;
        var refUrl = '/api/ref/';
        var courseUrl = '/api/courses/';
        var careerTechUrl = '/api/careertech/';


        Vue.use(VeeValidate,
            {
                classes: true,
                classNames: {
                    valid: 'is-valid',
                    invalid: 'is-invalid'
                }
            });

        Vue.use(VueTabs);

        var app = new Vue({
            el: '#app',
            data: {
                urlParam: null,
                title: '',
                course: {},
                coursePrograms: [],

                schoolYears: [],
                grades: [],
                courseTypes: [],
                creditTypes: [],
                classTypes: [],
                subjectAreas: [],
                programs: [],
                selectedProgram: null,
            },
            computed: {
                isFormDirty() {
                    return Object.keys(this.fields).some(key => this.fields[key].dirty);
                }
            },
            methods: {
                submit: function(e) {
                    this.errors.push('Course code required');
                    if (this.course.name.length === 0) {
                        this.errors.push('Course code required');
                    }

                    axios.put(courseUrl, this.course)
                        .then(resp => {
                            console.log('resp', resp);
                        });
                },

                deleteProgram: function(e, program) {
                    var idx = this.coursePrograms.indexOf(program);

                    axios.delete(
                            careerTechUrl + 'programs/' + program.programCode + '/course/' + this.course.courseCode)
                        .then(resp => {
                            this.coursePrograms.splice(idx, 1);
                        });
                },

                addProgram: function(e) {
                    var url = careerTechUrl +
                        'programs/' +
                        this.selectedProgram.programCode +
                        '/course/' +
                        this.course.courseCode;

                    axios.post(url)
                        .then(resp => {
                            this.coursePrograms.push(this.selectedProgram);
                        });
                }
            },
            created() {
                this.urlParam = urlParam;
                var fetch = courseUrl + urlParam + '/edit';
                var programUrl = careerTechUrl + 'courses/' + this.urlParam + '/programs';

                axios.get(fetch).then(resp => {
                    this.course = resp.data;
                    this.title = this.course.name + ' (' + this.course.courseCode + ')';
                }).then(resp => {
                    axios.get(programUrl).then(resp => {
                        this.coursePrograms = resp.data;
                    }).catch(err => console.log(err));
                }).catch(err => console.log(err));

                axios.get(refUrl + 'schoolyears').then(resp => {
                    this.schoolYears = resp.data;
                }).catch(err => console.log(err));

                axios.get(refUrl + 'grades').then(resp => {
                    this.grades = resp.data;
                }).catch(err => console.log(err));

                axios.get(refUrl + 'coursetypes').then(resp => {
                    this.courseTypes = resp.data;
                }).catch(err => console.log(err));

                axios.get(refUrl + 'credittypes').then(resp => {
                    this.creditTypes = resp.data;
                }).catch(err => console.log(err));

                axios.get(refUrl + 'classtypes').then(resp => {
                    this.classTypes = resp.data;
                }).catch(err => console.log(err));

                axios.get(refUrl + 'subjectareas').then(resp => {
                    this.subjectAreas = resp.data;
                }).catch(err => console.log(err));

                axios.get(refUrl + 'programs').then(resp => {
                    this.programs = resp.data;
                }).catch(err => console.log(err));

                //Custom Validator
                this.$validator.extend('greaterThan',
                    (value, otherValue) => {
                        var valueObj = this.schoolYears.find(x => x.id == value);
                        var otherObj = this.schoolYears.find(x => x.id == otherValue);
                        if (valueObj !== undefined && otherObj !== undefined) {
                            return valueObj.year >= otherObj.year;
                        }
                        return true;
                    },
                    {
                        hasTarget: true
                    });


            },
            mounted() {
            },
            ready() {
            }
        });
    </script>
}

